// A peak element is an element that is strictly greater than its neighbors.
// Given a 0-indexed integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.
// You may imagine that nums[-1] = nums[n] = -∞. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.
// You must write an algorithm that runs in O(log n) time.

class Solution {
    public int findPeakElement(int[] nums) {
       int start = 0, end = nums.length - 1;
        while(start != end){
            int middle = (start + end) / 2;
            if(nums[middle] > nums[middle + 1]){
                end = middle;
            }
            if(nums[middle] < nums[middle + 1]){
                start = middle + 1;
            }
        }

        return end; 
    }
}
